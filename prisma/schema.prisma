generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:dev.db"
}

model User {
  id                Int                 @id @default(autoincrement())
  email             String              @unique
  AuthorizationCode AuthorizationCode[] @relation("user")
  Token             Token[]             @relation("user")
  Client            Client[]            @relation("user")
}

model AuthorizationCode {
  authorizationCode String   @unique
  expiresAt         DateTime @default(now())
  clientId          String
  userId            Int
  redirectUri       String
  client            Client   @relation("client", fields: [clientId], references: [clientId], onDelete: Cascade)
  user              User     @relation("user", fields: [userId], references: [id], onDelete: Cascade)
}

model Client {
  id                String              @id @unique @default(uuid())
  clientId          String              @unique
  clientSecret      String
  dataUris          String
  grants            String
  userId            Int                 @unique
  AuthorizationCode AuthorizationCode[] @relation("client")
  Token             Token[]             @relation("client")
  user              User                @relation("user", fields: [userId], references: [id], onDelete: Cascade)

  @@index([clientId, id])
}

model Token {
  accessToken           String    @unique
  accessTokenExpiresAt  DateTime  @default(now())
  clientId              String
  userId                Int
  refreshToken          String?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  user                  User      @relation("user", fields: [userId], references: [id], onDelete: Cascade)
  client                Client    @relation("client", fields: [clientId], references: [clientId], onDelete: Cascade)
}
